// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String
  avatarUrl String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookmarks Bookmark[]
}

model Ticket {
  id String @id @default(uuid())
  userId String
  title String
  date DateTime
  imageUrl String
  cast String
  theater String
  seat String
  site String
  price Int
  review String
  createdAt DateTime @default(now())
}

model Review {
  id String @id @default(uuid())
  userId String
  showId String
  show Show @relation(fields: [showId], references: [id], onDelete: Cascade)
  recommend Boolean
  review String
  createdAt DateTime @default(now())
}

model Show {
  id String @id
  title String
  duration String
  theater String
  poster String
  reviews Review[]
  bookmarks Bookmark[]
}

model Bookmark {
  id String @id @default(uuid())
  userId String
  showId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  show Show @relation(fields: [showId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@unique([userId, showId])
}
